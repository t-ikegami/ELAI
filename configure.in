#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.65])
AC_INIT([FULL-PACKAGE-NAME], [VERSION], [BUG-REPORT-ADDRESS])
AC_CONFIG_SRCDIR([config.h.in])
AC_CONFIG_HEADERS([config.h])

AC_LANG([C++])

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

CC=mpicc
CXX=mpic++

AC_CHECK_PROG(icc_found, icc, icc, no)
if test "$icc_found" != "icc"; then with_gcc=yes; fi

AC_MSG_CHECKING([for --with-gcc])
AC_ARG_WITH(
    gcc,
    AS_HELP_STRING([--with-gcc], [use gcc]),
    [
        case $withval in
        no)     whth_gcc=no;;
        yes)    with_gcc=yes;;
        *)      with_gcc=no;;
        esac
    ]
)
AC_MSG_RESULT($with_gcc)
if test "x$with_gcc" = "x"; then whth_gcc=no; fi

enable_assertion="yes"
AC_MSG_CHECKING([for --enable-assertion])
AC_ARG_ENABLE(
    assertion,
    AS_HELP_STRING([--enable-assertion@<:@=ARG@:>@], [enable assertion [ARG=yes]]),
    [
        case $enableval in
        no) enable_assertion="no";;
        *)  enable_assersion="yes";;
        esac
    ]
)
AC_MSG_RESULT($enable_assertion)

AC_SUBST(MPICC)
AC_CHECK_TOOLS(MPICC, mpicc, mpicc)
AC_SUBST(MPICXX)
AC_CHECK_TOOLS(MPICXX, mpic++, mpic++)

# Checks for header files.
AC_CHECK_HEADERS([stdlib.h string.h strings.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_INLINE
AC_C_RESTRICT
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_STRTOD
AC_CHECK_FUNCS([bzero memset mkdir sqrt strstr strtol])

AC_CHECK_PROG(HAS_PYTHON, python, found, not-found)
AS_IF([test $HAS_PYTHON != found],
    [AC_MSG_ERROR([
        Cannot find python. Please install Python 2.7 or later.], [1])])
PYTHON_VERSION=`python -c 'import sysconfig;print sysconfig.get_config_var("py_version_short")'`

AC_ARG_WITH(mpi,
    [AS_HELP_STRING([--with-mpi=PATH],
        [specify prefix directory for installed MPI package.])])

AC_ARG_WITH(mpi-include,
    [AS_HELP_STRING([--with-mpi-include=PATH],
        [specify directory for installed MPI include files.])])

AC_ARG_WITH(mpi4py,
    [AS_HELP_STRING([--with-mpi4py=PATH],
        [specify prefix directory for installed Mpi4py package.])])

AC_ARG_WITH(mpi4py-include,
    [AS_HELP_STRING([--with-mpi4py-include=PATH],
        [specify directory for installed Mpi4py include files.])])

AC_ARG_WITH(numpy,
    [AS_HELP_STRING([--with-numpy=PATH],
        [specify prefix directory for installed NumPy package.])])

AC_CHECK_PROG(HAS_SWIG, swig, found, not-found)
AS_IF([test $HAS_SWIG != found],
    [AC_MSG_FAILURE([
        Cannot find swig. Please install SWIG 2 or later.], [1])])

ELAI_LIBS="'mkl_rt', 'ifcore'"
BLAS_LIB="-lmkl_rt"
LAPACK_LIB=
RANLIB_CMD="echo"
FORTRAN_OPT="-DALLOW_NON_INIT -nofor-main"
LD_OPT="-nofor-main"
if test "$with_gcc" = "yes"
then
    ELAI_LIBS="'blas'"
    BLAS_LIB="-lblas"
    LAPACK_LIB="-llapack"
    RANLIB_CMD="ranlib"
    FORTRAN_OPT="-DALLOW_NON_INIT"
    LD_OPT=""
fi

if test -n "$with_elai"
then
    ELAI_INC_DIR="$with_elai/include"
    ELAI_LIB_DIR="$with_elai/lib"
else
    ELAI_INC_DIR="$ac_default_prefix/include"
    ELAI_LIB_DIR="$ac_default_prefix/lib"
fi

if test -n "$with_mpi4py"
then
    MPI4PY_INC_DIR="$with_mpi4py/include"
else
    cpu=""
    if test "x`uname -p`" = "xx86_64"; then cpu=64; fi
    MPI4PY_INC_DIR=/usr/lib$cpu/python$PYTHON_VERSION/site-packages/mpi4py/include
    if test ! -f $MPI4PY_INC_DIR/mpi4py/mpi4py.i
    then
        MPI4PY_INC_DIR=$HOME/.local/lib/python$PYTHON_VERSION/site-packages/mpi4py/include
        if test ! -f $MPI4PY_INC_DIR/mpi4py/mpi4py.i
        then
            MPI4PY_INC_DIR="$ac_default_prefix/include"
        fi
    fi
fi
if test -n "$with_mpi4py_include"
then
    MPI4PY_INC_DIR="$with_mpi4py_include"
fi

AC_MSG_CHECKING([for exist file of mpi4py.i])
AS_IF([test ! -f $MPI4PY_INC_DIR/mpi4py/mpi4py.i],
    [AC_MSG_ERROR([Cannot find Mpi4Py. Please install Mpi4Py and pass
--with-mpi4py flag to ./configure.])]
)
AC_MSG_RESULT([yes])

if test -n "$with_numpy"
then
    NUMPY_INC_DIR="$with_numpy/include"
else
    NUMPY_INC_DIR="$ac_default_prefix/include"
fi

ENABLE_ASSERTION=
if test "$enable_assertion" != "no"
then
    ENABLE_ASSERTION="-UNDEBUG"
fi

AC_SUBST(CC)
AC_SUBST(CXX)
AC_SUBST(PYTHON_VERSION)
AC_SUBST(ELAI_INC_DIR)
AC_SUBST(ELAI_LIB_DIR)
AC_SUBST(ELAI_LIBS)
AC_SUBST(BLAS_LIB)
AC_SUBST(LAPACK_LIB)
AC_SUBST(RANLIB_CMD)
AC_SUBST(FORTRAN_OPT)
AC_SUBST(LD_OPT)
AC_SUBST(MPI4PY_INC_DIR)
AC_SUBST(NUMPY_INC_DIR)
AC_SUBST(ENABLE_ASSERTION)

AC_CONFIG_FILES([
    Makefile
    Misc/Makefile
    Misc/Patches/mumps-makefile.inc
    Misc/Patches/scalapack-slmake.inc
    python/Makefile
    python/setup.py
])

AC_OUTPUT
